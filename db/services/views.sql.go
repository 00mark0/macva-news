// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0
// source: views.sql

package db

import (
	"context"

	"github.com/jackc/pgx/v5/pgtype"
)

const addView = `-- name: AddView :exec
INSERT INTO "views" ("content_id", "user_id")
VALUES ($1, $2)
`

type AddViewParams struct {
	ContentID pgtype.UUID
	UserID    pgtype.UUID
}

func (q *Queries) AddView(ctx context.Context, arg AddViewParams) error {
	_, err := q.db.Exec(ctx, addView, arg.ContentID, arg.UserID)
	return err
}

const getView = `-- name: GetView :one
SELECT 1
FROM "views"
WHERE "content_id" = $1
  AND "user_id" = $2
LIMIT 1
`

type GetViewParams struct {
	ContentID pgtype.UUID
	UserID    pgtype.UUID
}

func (q *Queries) GetView(ctx context.Context, arg GetViewParams) (int32, error) {
	row := q.db.QueryRow(ctx, getView, arg.ContentID, arg.UserID)
	var column_1 int32
	err := row.Scan(&column_1)
	return column_1, err
}
