package components

import (
"fmt"
"github.com/00mark0/macva-news/db/services"
"strconv"
)

var contentTags []db.Tag

type ListPublishedContentRes struct {
ContentID string
UserID string
CategoryID string
Title string
ContentDescription string
CommentsEnabled bool
ViewCountEnabled bool
LikeCountEnabled bool
DislikeCountEnabled bool
Status string
ViewCount int32
LikeCount int32
DislikeCount int32
CommentCount int32
CreatedAt string
UpdatedAt string
PublishedAt string
IsDeleted bool
Username string
CategoryName string
}

script toggleDropdown(index int) {
var dropdown = document.querySelector('#dropdown-' + index)
if (dropdown.classList.contains('hidden')) {
dropdown.classList.remove('hidden')
} else {
dropdown.classList.add('hidden')
}
}

script handlePubSort() {
const select = document.getElementById('pub-sort-select');
const selectedOption = select.options[select.selectedIndex];
const url = selectedOption.getAttribute('data-url');
if(url) {
htmx.ajax('GET', url, { target: '#admin-articles', swap: 'innerHTML' });
} else {
console.warn('No URL set for this sort option.');
}
}

script handleDraftSort() {
const select = document.getElementById('draft-sort-select');
const selectedOption = select.options[select.selectedIndex];
const url = selectedOption.getAttribute('data-url');
if(url) {
htmx.ajax('GET', url, { target: '#admin-articles', swap: 'innerHTML' });
} else {
console.warn('No URL set for this sort option.');
}
}

script handleDelSort() {
const select = document.getElementById('del-sort-select');
const selectedOption = select.options[select.selectedIndex];
const url = selectedOption.getAttribute('data-url');
if(url) {
htmx.ajax('GET', url, { target: '#admin-articles', swap: 'innerHTML' });
} else {
console.warn('No URL set for this sort option.');
}
}

script hidePubSelect() {
const pubSelect = document.getElementById('pub-select-div');
pubSelect.classList.add('hidden');
}

script hideDraftSelect() {
const draftSelect = document.getElementById('draft-select-div');
draftSelect.classList.add('hidden');
}

script hideDelSelect() {
const delSelect = document.getElementById('del-select-div');
delSelect.classList.add('hidden');
}

script clearArticleModal() {
const articleModal = document.getElementById('create-article-modal');
articleModal.classList.remove('hidden');
articleModal.innerHTML = '';
}

templ AdminArticles(overview db.GetContentOverviewRow, nextLimit int, content []ListPublishedContentRes, url string) {
<div class="w-full min-h-screen dark:bg-black bg-gray-50 sm:p-8 p-4">
	<div class="flex justify-between items-center">
		<h1 class="text-3xl font-semibold text-black dark:text-white mb-10">Artikli</h1>
		<a href="/admin/content/create"
			class="bg-blue-500 hover:bg-blue-600 text-white px-4 py-2 rounded-md text-sm font-medium transition-colors duration-200 mb-10">
			Novi Artikl
		</a>
	</div>
	<!-- Floating Nav Container -->
	<div id="article-nav">
		@ArticleNav(overview)
	</div>
	<div id="nav-switch">
		@PublishedContentSort(nextLimit, content, url)
	</div>
	<div class="space-y-4 mt-12">
		<div
			class="flex flex-col gap-4 sm:gap-0 sm:flex-row items-center justify-between pb-4 border-b dark:border-gray-700">
			<h2 class="text-xl font-medium text-gray-800 dark:text-gray-200">Tagovi</h2>
			<div>
				<form hx-get="/api/admin/tags/search" hx-target="#admin-tags-list"
					class="relative flex gap-2 items-center">
					<input type="search" placeholder="Pretraži tagove..." id="tag-search" name="search_term" class="bg-white dark:bg-gray-700 border border-gray-300 dark:border-gray-600 rounded-xl 
							   px-3 py-2 text-sm focus:outline-none focus:ring-2 focus:ring-blue-500 
							   dark:text-gray-200 w-64" />
					<button type="submit" class="cursor-pointer bg-blue-500 hover:bg-blue-600 text-white px-4 py-2 rounded-md 
							   transition-colors duration-200 flex items-center justify-center">
						<svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 24 24"
							stroke="currentColor">
							<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
								d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"></path>
						</svg>
					</button>
				</form>
			</div>
		</div>
		<div id="admin-tags-list" hx-get="/api/admin/tags" hx-trigger="load" hx-target="#admin-tags-list"
			class="bg-white dark:bg-gray-800 rounded-lg shadow-md p-6"></div>
	</div>
</div>
}

templ ArticleNav(overview db.GetContentOverviewRow) {
<nav class="flex justify-center w-full mb-8">
	<div
		class="flex flex-col sm:flex-row items-center gap-4 sm:gap-0 bg-white/80 dark:bg-gray-800/80 backdrop-blur-md rounded-xl shadow-lg p-2 sm:p-1 border border-gray-200 dark:border-gray-700">
		<button hx-trigger="click" hx-get="/admin/pub-content" hx-target="#nav-switch" hx-swap="innerHTML"
			class="cursor-pointer relative px-6 py-3 rounded-lg transition-all duration-200 font-medium focus:outline-none focus:ring-2 focus:ring-blue-400 dark:focus:ring-blue-600 group bg-white dark:bg-gray-800 text-gray-800 dark:text-gray-200 hover:bg-blue-50 dark:hover:bg-gray-700 w-full sm:w-auto"
			id="published-btn"
			_="on click add .active to me remove .active from #draft-btn remove .active from #deleted-btn">
			<span class="flex items-center justify-center">
				<span
					class="inline-flex items-center justify-center w-6 h-6 mr-2 rounded-full bg-green-100 dark:bg-green-900 text-green-800 dark:text-green-200 text-xs">
					{ fmt.Sprintf("%d", overview.PublishedCount) }
				</span>
				<span>Objavljeni</span>
			</span>
			<span
				class="absolute bottom-0 left-0 w-full h-1 bg-blue-500 rounded-b-lg opacity-0 transition-all duration-200 group-[.active]:opacity-100"></span>
		</button>
		<div class="hidden sm:block h-6 w-px bg-gray-300 dark:bg-gray-600 mx-1"></div>
		<button hx-trigger="click" hx-get="/admin/draft-content" hx-target="#nav-switch" hx-swap="innerHTML"
			class="cursor-pointer relative px-6 py-3 rounded-lg transition-all duration-200 font-medium focus:outline-none focus:ring-2 focus:ring-blue-400 dark:focus:ring-blue-600 group bg-white dark:bg-gray-800 text-gray-800 dark:text-gray-200 hover:bg-blue-50 dark:hover:bg-gray-700 w-full sm:w-auto"
			id="draft-btn"
			_="on click add .active to me remove .active from #published-btn remove .active from #deleted-btn">
			<span class="flex items-center justify-center">
				<span
					class="inline-flex items-center justify-center w-6 h-6 mr-2 rounded-full bg-yellow-100 dark:bg-yellow-900 text-yellow-800 dark:text-yellow-200 text-xs">
					{ fmt.Sprintf("%d", overview.DraftCount) }
				</span>
				<span>Neobjavljeni</span>
			</span>
			<span
				class="absolute bottom-0 left-0 w-full h-1 bg-blue-500 rounded-b-lg opacity-0 transition-all duration-200 group-[.active]:opacity-100"></span>
		</button>
		<div class="hidden sm:block h-6 w-px bg-gray-300 dark:bg-gray-600 mx-1"></div>
		<button hx-trigger="click" hx-get="/admin/del-content" hx-target="#nav-switch" hx-swap="innerHTML"
			class="cursor-pointer relative px-6 py-3 rounded-lg transition-all duration-200 font-medium focus:outline-none focus:ring-2 focus:ring-blue-400 dark:focus:ring-blue-600 group bg-white dark:bg-gray-800 text-gray-800 dark:text-gray-200 hover:bg-blue-50 dark:hover:bg-gray-700 w-full sm:w-auto"
			id="deleted-btn"
			_="on click add .active to me remove .active from #published-btn remove .active from #draft-btn">
			<span class="flex items-center justify-center">
				<span
					class="inline-flex items-center justify-center w-6 h-6 mr-2 rounded-full bg-red-100 dark:bg-red-900 text-red-800 dark:text-red-200 text-xs">
					{ fmt.Sprintf("%d", overview.DeletedCount) }
				</span>
				<span>Arhivirani</span>
			</span>
			<span
				class="absolute bottom-0 left-0 w-full h-1 bg-blue-500 rounded-b-lg opacity-0 transition-all duration-200 group-[.active]:opacity-100"></span>
		</button>
	</div>
</nav>
}

templ PublishedContentSort(nextLimit int, content []ListPublishedContentRes, url string) {
<div class="space-y-4">
	<div
		class="flex flex-col gap-4 sm:gap-0 sm:flex-row items-center justify-between pb-4 border-b dark:border-gray-700">
		<h2 class="text-xl font-medium text-gray-800 dark:text-gray-200">Objavljeni Artikli</h2>
		<div>
			<form hx-get="/api/admin/content/published/search" hx-target="#admin-articles"
				class="relative flex gap-2 items-center">
				<input type="search" placeholder="Pretraži objavljene artikle..." id="article-pub-search"
					name="search_term" class="bg-white dark:bg-gray-700 border border-gray-300 dark:border-gray-600 rounded-xl 
							   px-3 py-2 text-sm focus:outline-none focus:ring-2 focus:ring-blue-500 
							   dark:text-gray-200 w-64" />
				<input type="hidden" name="limit" value={ fmt.Sprintf("%d", nextLimit-20) } id="limitInput" />
				<button type="submit" onClick={ hidePubSelect() } class="cursor-pointer bg-blue-500 hover:bg-blue-600 text-white px-4 py-2 rounded-md 
							   transition-colors duration-200 flex items-center justify-center">
					<svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 24 24"
						stroke="currentColor">
						<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
							d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"></path>
					</svg>
				</button>
			</form>
		</div>
		<div id="pub-select-div" class="flex flex-row items-center space-x-4">
			<select id="pub-sort-select" onChange={ handlePubSort() } class="bg-white dark:bg-gray-700 border border-gray-300 dark:border-gray-600 rounded-md px-3 py-2
				text-sm focus:outline-none focus:ring-2 focus:ring-blue-500 dark:text-gray-200">
				<option data-url={ fmt.Sprintf("/api/admin/content/published?limit=%d", nextLimit-20) }>
					Najnovije
				</option>
				<option data-url={ fmt.Sprintf("/api/admin/content/published/oldest?limit=%d", nextLimit-20) }>
					Najstarije
				</option>
				<option data-url={ fmt.Sprintf("/api/admin/content/published/title?limit=%d", nextLimit-20) }>
					Po
					naslovu
				</option>
			</select>
		</div>
	</div>
	<div id="admin-articles" class="bg-white dark:bg-gray-800 rounded-lg shadow-md p-6">
		@PublishedContent(nextLimit, content, url)
	</div>
</div>
}

templ DraftContentSort(nextLimit int, content []ListPublishedContentRes, url string) {
<div class="space-y-4">
	<div
		class="flex flex-col gap-4 sm:gap-0 sm:flex-row items-center justify-between pb-4 border-b dark:border-gray-700">
		<h2 class="text-xl font-medium text-gray-800 dark:text-gray-200">Neobjavljeni Artikli</h2>
		<div>
			<form hx-get="/api/admin/content/draft/search" hx-target="#admin-articles"
				class="relative flex gap-2 items-center">
				<input type="search" placeholder="Pretraži neobjavljene artikle..." id="article-draft-search"
					name="search_term" class="bg-white dark:bg-gray-700 border border-gray-300 dark:border-gray-600 rounded-xl 
							   px-3 py-2 text-sm focus:outline-none focus:ring-2 focus:ring-blue-500 
							   dark:text-gray-200 w-64" />
				<input type="hidden" name="limit" value={ fmt.Sprintf("%d", nextLimit-20) } id="limitInput" />
				<button type="submit" onClick={ hideDraftSelect() } class="cursor-pointer bg-blue-500 hover:bg-blue-600 text-white px-4 py-2 rounded-md 
							   transition-colors duration-200 flex items-center justify-center">
					<svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 24 24"
						stroke="currentColor">
						<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
							d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"></path>
					</svg>
				</button>
			</form>
		</div>
		<div id="draft-select-div" class="flex flex-row space-x-2">
			<select id="draft-sort-select" onChange={ handleDraftSort() } class="bg-white dark:bg-gray-700 border border-gray-300 dark:border-gray-600 rounded-md px-3 py-2
				text-sm focus:outline-none focus:ring-2 focus:ring-blue-500 dark:text-gray-200">
				<option data-url={ fmt.Sprintf("/api/admin/content/draft?limit=%d", nextLimit-20) }>
					Najnovije
				</option>
				<option data-url={ fmt.Sprintf("/api/admin/content/draft/oldest?limit=%d", nextLimit-20) }>
					Najstarije
				</option>
				<option data-url={ fmt.Sprintf("/api/admin/content/draft/title?limit=%d", nextLimit-20) }>
					Po
					naslovu
				</option>
			</select>
		</div>
	</div>
	<div id="admin-articles" class="bg-white dark:bg-gray-800 rounded-lg shadow-md p-6">
		@PublishedContent(nextLimit, content, url)
	</div>
</div>
}

templ DeletedContentSort(nextLimit int, content []ListPublishedContentRes, url string) {
<div class="space-y-4">
	<div
		class="flex flex-col gap-4 sm:gap-0 sm:flex-row items-center justify-between pb-4 border-b dark:border-gray-700">
		<h2 class="text-xl font-medium text-gray-800 dark:text-gray-200">Arhivirani Artikli</h2>
		<div>
			<form hx-get="/api/admin/content/deleted/search" hx-target="#admin-articles"
				class="relative flex gap-2 items-center">
				<input type="search" placeholder="Pretraži arhivirane artikle..." id="article-del-search"
					name="search_term" class="bg-white dark:bg-gray-700 border border-gray-300 dark:border-gray-600 rounded-xl 
							   px-3 py-2 text-sm focus:outline-none focus:ring-2 focus:ring-blue-500 
							   dark:text-gray-200 w-64" />
				<input type="hidden" name="limit" value={ fmt.Sprintf("%d", nextLimit-20) } id="limitInput" />
				<button type="submit" onClick={ hideDelSelect() } class="cursor-pointer bg-blue-500 hover:bg-blue-600 text-white px-4 py-2 rounded-md 
							   transition-colors duration-200 flex items-center justify-center">
					<svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 24 24"
						stroke="currentColor">
						<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
							d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"></path>
					</svg>
				</button>
			</form>
		</div>
		<div id="del-select-div" class="flex flex-row space-x-2">
			<select id="del-sort-select" onChange={ handleDelSort() } class="bg-white dark:bg-gray-700 border border-gray-300 dark:border-gray-600 rounded-md px-3 py-2
				text-sm focus:outline-none focus:ring-2 focus:ring-blue-500 dark:text-gray-200">
				<option data-url={ fmt.Sprintf("/api/admin/content/deleted?limit=%d", nextLimit-20) }>
					Najnovije
				</option>
				<option data-url={ fmt.Sprintf("/api/admin/content/deleted/oldest?limit=%d", nextLimit-20) }>
					Najstarije
				</option>
				<option data-url={ fmt.Sprintf("/api/admin/content/deleted/title?limit=%d", nextLimit-20) }>
					Po
					naslovu
				</option>
			</select>
		</div>
	</div>
	<div id="admin-articles" class="bg-white dark:bg-gray-800 rounded-lg shadow-md p-6">
		@PublishedContent(nextLimit, content, url)
	</div>
</div>
}

templ PublishedContent(nextLimit int, content []ListPublishedContentRes, url string) {
if len(content) > 0 {
<div class="space-y-4">
	<div class="overflow-x-auto">
		<table class="min-w-full">
			<thead class="bg-gray-50 dark:bg-gray-700">
				<tr>
					<th
						class="px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider">
						Naslov
					</th>
					<th
						class="px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider">
						Kategorija
					</th>
					if content[0].Status == "published" && content[0].IsDeleted == false {
					<th
						class="px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider">
						Datum objave
					</th>
					} else {
					<th
						class="px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider">
						Datum kreiranja
					</th>
					}
					<th
						class="px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider">
						Autor
					</th>
					<th
						class="px-6 py-3 text-right text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider">
						Akcije
					</th>
				</tr>
			</thead>
			<tbody class="bg-white dark:bg-gray-800 divide-y divide-gray-200 dark:divide-gray-700">
				for i, v := range content {
				<tr class="hover:bg-gray-50 dark:hover:bg-gray-700">
					<td class="px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900 dark:text-white">
						<p class="w-64 truncate">{ v.Title }</p>
					</td>
					if v.Status == "published" && v.IsDeleted == false {
					<td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500 dark:text-gray-300">
						{ v.CategoryName }
					</td>
					} else if v.Status == "draft" && v.IsDeleted == false {
					<td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500 dark:text-gray-300">
						Neobjavljeno
					</td>
					} else {
					<td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500 dark:text-gray-300">
						Arhivirano
					</td>
					}
					if content[0].Status == "published" && content[0].IsDeleted == false {
					<td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500 dark:text-gray-300">
						{
						v.PublishedAt }
					</td>
					} else {
					<td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500 dark:text-gray-300">
						{
						v.CreatedAt }
					</td>
					}
					<td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500 dark:text-gray-300">
						{
						v.Username }
					</td>
					<td class="px-6 py-4 whitespace-nowrap text-right text-sm font-medium">
						<div class="relative inline-block text-left" id={ "dropdown-container-" + fmt.Sprint(i) }>
							<button type="button" hx-get={ fmt.Sprintf("/api/admin/tags/%v", v.ContentID) }
								hx-target={ "#tags-article-detes" + fmt.Sprint(i) } hx-swap="innerHTML"
								hx-trigger="click delay:100ms"
								class="cursor-pointer text-blue-600 hover:text-blue-900 dark:text-blue-400 dark:hover:text-blue-300 mr-3 flex items-center"
								onClick={ toggleDropdown(i) }>
								<svg class="w-4 h-4 ml-1" fill="none" stroke="currentColor" viewBox="0 0 24 24"
									xmlns="http://www.w3.org/2000/svg">
									<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
										d="M19 9l-7 7-7-7"></path>
								</svg>
							</button>
						</div>
						if v.IsDeleted == false {
						<button
							class="cursor-pointer text-blue-600 hover:text-blue-900 dark:text-blue-400 dark:hover:text-blue-300 mr-3">Uredi</button>
						}
						if v.Status == "draft" && v.IsDeleted == false {
						<button hx-put={ fmt.Sprintf("/api/admin/content/publish/%v", v.ContentID) }
							hx-target="#article-nav" hx-trigger="click"
							onclick="this.parentElement.parentElement.classList.add('hidden')"
							class="cursor-pointer text-green-600 hover:text-green-900 dark:text-green-400 dark:hover:text-green-300 mr-3">Objavi</button>
						}
						if v.IsDeleted == true {
						<button hx-put={ fmt.Sprintf("/api/admin/content/unarchive/%v", v.ContentID) }
							hx-target="#article-nav" hx-trigger="click"
							onclick="this.parentElement.parentElement.classList.add('hidden')"
							class="cursor-pointer text-green-600 hover:text-green-900 dark:text-green-400 dark:hover:text-green-300 mr-3">Obnovi</button>
						<button hx-delete={ fmt.Sprintf("/api/admin/content/%v", v.ContentID) } hx-target="#article-nav"
							hx-trigger="click" onclick="this.parentElement.parentElement.classList.add('hidden')"
							class="cursor-pointer text-red-600 hover:text-red-900 dark:text-red-400 dark:hover:text-red-300">Obriši</button>
						} else {
						<button hx-put={ fmt.Sprintf("/api/admin/content/archive/%v", v.ContentID) }
							hx-target="#article-nav" hx-trigger="click"
							onclick="this.parentElement.parentElement.classList.add('hidden')"
							class="cursor-pointer text-red-600 hover:text-red-900 dark:text-red-400 dark:hover:text-red-300">Arhiviraj</button>
						}
					</td>
				</tr>
				<tr>
					<td colspan="5">
						<div id={ "dropdown-" + fmt.Sprint(i) }
							class="hidden w-full rounded-md bg-gray-50 dark:bg-gray-800 border border-gray-200 dark:border-gray-700 shadow-sm">
							<div class="p-4">
								<div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4">
									<!-- Content Details -->
									<div class="space-y-3">
										<h3 class="text-sm font-medium text-gray-700 dark:text-gray-300">
											Detalji
											sadržaja
										</h3>
										<div>
											<p class="text-xs text-gray-500 dark:text-gray-400">Opis</p>
											<p class="truncate text-sm text-gray-800 dark:text-gray-200 mt-1">
												{
												v.ContentDescription }
											</p>
										</div>
										<!-- Is Deleted -->
										<div class="flex items-center justify-between">
											<span class="text-sm text-gray-700 dark:text-gray-300">Obrisano</span>
											<div>
												if v.IsDeleted {
												<span
													class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-red-100 text-red-800 dark:bg-red-800 dark:text-red-100">
													Da
												</span>
												} else {
												<span
													class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-green-100 text-green-800 dark:bg-green-800 dark:text-green-100">
													Ne
												</span>
												}
											</div>
										</div>
										<div>
											<p class="text-xs text-gray-500 dark:text-gray-400">Status</p>
											<div class="mt-1">
												if v.Status == "published" && v.IsDeleted == false {
												<span
													class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-green-100 text-green-800 dark:bg-green-800 dark:text-green-100">
													Objavljeno
												</span>
												} else if v.Status == "draft" && v.IsDeleted == false {
												<span
													class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-yellow-100 text-yellow-800 dark:bg-yellow-800 dark:text-yellow-100">
													Nacrt
												</span>
												} else {
												<span
													class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-gray-100 text-gray-800 dark:bg-gray-700 dark:text-gray-300">
													Arhivirano
												</span>
												}
											</div>
										</div>
										<div>
											<p class="mb-2 text-xs text-gray-500 dark:text-gray-400">Tagovi</p>
											<div id={ "tags-article-detes" + fmt.Sprint(i) }></div>
										</div>
										<div>
											<p class="text-xs text-gray-500 dark:text-gray-400">ID Sadržaja</p>
											<p class="text-sm font-mono text-gray-600 dark:text-gray-400 mt-1">
												{
												v.ContentID }
											</p>
										</div>
									</div>
									<!-- Statistics -->
									<div class="space-y-3">
										<h3 class="text-sm font-medium text-gray-700 dark:text-gray-300">
											Statistika
										</h3>
										<div class="grid grid-cols-2 gap-3">
											<div class="bg-white dark:bg-gray-700 p-2 rounded-md shadow-sm">
												<p class="text-xs text-gray-500 dark:text-gray-400">Pregledi</p>
												<p class="text-lg font-semibold text-gray-800 dark:text-white">
													{
													fmt.Sprint(v.ViewCount) }
												</p>
											</div>
											<div class="bg-white dark:bg-gray-700 p-2 rounded-md shadow-sm">
												<p class="text-xs text-gray-500 dark:text-gray-400">Komentari</p>
												<p class="text-lg font-semibold text-gray-800 dark:text-white">
													{
													fmt.Sprint(v.CommentCount) }
												</p>
											</div>
											<div class="bg-white dark:bg-gray-700 p-2 rounded-md shadow-sm">
												<p class="text-xs text-gray-500 dark:text-gray-400">Lajkovi</p>
												<p class="text-lg font-semibold text-gray-800 dark:text-white">
													{
													fmt.Sprint(v.LikeCount) }
												</p>
											</div>
											<div class="bg-white dark:bg-gray-700 p-2 rounded-md shadow-sm">
												<p class="text-xs text-gray-500 dark:text-gray-400">Dislajkovi</p>
												<p class="text-lg font-semibold text-gray-800 dark:text-white">
													{
													fmt.Sprint(v.DislikeCount) }
												</p>
											</div>
										</div>
										<div>
											<p class="text-xs text-gray-500 dark:text-gray-400">Datumi</p>
											<div class="mt-1 space-y-1">
												<p class="text-xs text-gray-600 dark:text-gray-400">
													<span class="font-medium">Kreirano:</span> {
													v.CreatedAt }
												</p>
												<p class="text-xs text-gray-600 dark:text-gray-400">
													<span class="font-medium">Ažurirano:</span> {
													v.UpdatedAt }
												</p>
												<p class="text-xs text-gray-600 dark:text-gray-400">
													<span class="font-medium">Objavljeno:</span> {
													v.PublishedAt }
												</p>
											</div>
										</div>
									</div>
									if v.Status == "published" && v.IsDeleted == false {
									<!-- Settings and Toggles -->
									<div class="space-y-3">
										<h3 class="text-sm font-medium text-gray-700 dark:text-gray-300">
											Postavke
										</h3>
										<div class="space-y-3">
											<!-- Comments Toggle -->
											<div class=" flex items-center justify-between">
												<span class="text-sm text-gray-700 dark:text-gray-300">
													Komentari
													omogućeni
												</span>
												<form hx-put={ fmt.Sprintf("/api/admin/content/%v", v.ContentID) }
													hx-trigger="change" hx-target="this" hx-swap="none">
													<label class="inline-flex items-center cursor-pointer">
														<input id="comments-checkbox" type="checkbox"
															name="comments_enabled" class="sr-only peer" checked?={
															v.CommentsEnabled } value="true" />
														<input id="comments-hidden" type="hidden"
															name="comments_enabled" value="false" />
														<div
															class="relative w-10 h-5 bg-gray-200 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-blue-300 dark:peer-focus:ring-blue-800 rounded-full peer dark:bg-gray-700 peer-checked:after:translate-x-full rtl:peer-checked:after:-translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:start-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-4 after:w-4 after:transition-all dark:border-gray-600 peer-checked:bg-blue-600">
														</div>
													</label>
												</form>
											</div>
											<!-- View Count Toggle -->
											<div class="flex items-center justify-between">
												<span class="text-sm text-gray-700 dark:text-gray-300">
													Prikaz
													brojača pregleda
												</span>
												<form hx-put={ fmt.Sprintf("/api/admin/content/%v", v.ContentID) }
													hx-trigger="change" hx-target="this" hx-swap="none">
													<label class="inline-flex items-center cursor-pointer">
														<input id="comments-checkbox" type="checkbox"
															name="view_count_enabled" class="sr-only peer" checked?={
															v.ViewCountEnabled } value="true" />
														<input id="comments-hidden" type="hidden"
															name="view_count_enabled" value="false" />
														<div
															class="relative w-10 h-5 bg-gray-200 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-blue-300 dark:peer-focus:ring-blue-800 rounded-full peer dark:bg-gray-700 peer-checked:after:translate-x-full rtl:peer-checked:after:-translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:start-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-4 after:w-4 after:transition-all dark:border-gray-600 peer-checked:bg-blue-600">
														</div>
													</label>
												</form>
											</div>
											<!-- Like Count Toggle -->
											<div class="flex items-center justify-between">
												<span class="text-sm text-gray-700 dark:text-gray-300">
													Prikaz
													brojača lajkova
												</span>
												<form hx-put={ fmt.Sprintf("/api/admin/content/%v", v.ContentID) }
													hx-trigger="change" hx-target="this" hx-swap="none">
													<label class="inline-flex items-center cursor-pointer">
														<input id="comments-checkbox" type="checkbox"
															name="like_count_enabled" class="sr-only peer" checked?={
															v.LikeCountEnabled } value="true" />
														<input id="comments-hidden" type="hidden"
															name="like_count_enabled" value="false" />
														<div
															class="relative w-10 h-5 bg-gray-200 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-blue-300 dark:peer-focus:ring-blue-800 rounded-full peer dark:bg-gray-700 peer-checked:after:translate-x-full rtl:peer-checked:after:-translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:start-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-4 after:w-4 after:transition-all dark:border-gray-600 peer-checked:bg-blue-600">
														</div>
													</label>
												</form>
											</div>
											<!-- Dislike Count Toggle -->
											<div class="flex items-center justify-between">
												<span class="text-sm text-gray-700 dark:text-gray-300">
													Prikaz
													brojača dislajkova
												</span>
												<form hx-put={ fmt.Sprintf("/api/admin/content/%v", v.ContentID) }
													hx-trigger="change" hx-target="this" hx-swap="none">
													<label class="inline-flex items-center cursor-pointer">
														<input id="comments-checkbox" type="checkbox"
															name="dislike_count_enabled" class="sr-only peer" checked?={
															v.DislikeCountEnabled } value="true" />
														<input id="comments-hidden" type="hidden"
															name="dislike_count_enabled" value="false" />
														<div
															class="relative w-10 h-5 bg-gray-200 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-blue-300 dark:peer-focus:ring-blue-800 rounded-full peer dark:bg-gray-700 peer-checked:after:translate-x-full rtl:peer-checked:after:-translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:start-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-4 after:w-4 after:transition-all dark:border-gray-600 peer-checked:bg-blue-600">
														</div>
													</label>
												</form>
											</div>
										</div>
									</div>
									}
								</div>
							</div>
						</div>
					</td>
				</tr>
				}
			</tbody>
		</table>
	</div>
	if len(content) == nextLimit {
	<div class="text-center">
		<button hx-trigger="click" hx-get={ url + fmt.Sprintf("%d", nextLimit) } hx-target="#admin-articles"
			hx-swap="innerHTML"
			class="cursor-pointer inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 transition duration-150 ease-in-out">
			Učitaj više
			<svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 ml-2" fill="none" viewBox="0 0 24 24"
				stroke="currentColor">
				<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7"></path>
			</svg>
		</button>
	</div>
	}
</div>
} else {
<div class="flex flex-col items-center justify-center py-10 px-4 bg-white dark:bg-gray-800 rounded-lg shadow-md">
	<svg xmlns="http://www.w3.org/2000/svg" class="h-16 w-16 text-gray-400 dark:text-gray-500 mb-4" fill="none"
		viewBox="0 0 24 24" stroke="currentColor">
		<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
			d="M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z">
		</path>
	</svg>
	<h3 class="text-lg font-medium text-gray-700 dark:text-gray-300 mb-1">Nema artikala</h3>
	<p class="text-sm text-gray-500 dark:text-gray-400">Trenutno nema artikala za prikaz.</p>
</div>
}
}

templ CreateArticle(categories []db.Category, tags []db.Tag) {
<!DOCTYPE html>
<html lang="en">

<head>
	<meta charset="UTF-8" />
	<meta name="viewport" content="width=device-width, initial-scale=1.0" />
	<title>Novi Artikl | Mačva News</title>
	<meta name="description" content="Mačva News Novi Artikl" />
	<link rel="preconnect" href="https://fonts.googleapis.com" />
	<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
	<link
		href="https://fonts.googleapis.com/css2?family=Merriweather:ital,wght@0,300;0,400;0,700;0,900;1,300;1,400;1,700;1,900&display=swap"
		rel="stylesheet" />
	<link href="/static/css/output.css" rel="stylesheet" />
	<!-- TinyMCE CDN -->
	<script src="https://cdn.tiny.cloud/1/zg40kx0ha6mahvkb69fetcvauvyy8qkro8ig11uzb6jzf0cl/tinymce/7/tinymce.min.js"
		referrerpolicy="origin"></script>
	<script src="/static/js/htmx.min.js"></script>
	<script src="/static/js/article.js" defer></script>
</head>

<body class="bg-gray-50 text-gray-900 dark:bg-black dark:text-gray-100 min-h-screen p-4 sm:p-12">
	<!-- Theme Toggle Button -->
	<div class="fixed top-4 right-4 z-10">
		<button id="create-theme-toggle"
			class="cursor-pointer p-2 rounded-full bg-gray-200 dark:bg-gray-700 text-gray-700 dark:text-gray-200">
			<svg id="sun-icon" class="w-6 h-6 hidden dark:block" fill="currentColor" viewBox="0 0 20 20"
				xmlns="http://www.w3.org/2000/svg">
				<path
					d="M10 2a1 1 0 011 1v1a1 1 0 11-2 0V3a1 1 0 011-1zm4 8a4 4 0 11-8 0 4 4 0 018 0zm-.464 4.95l.707.707a1 1 0 001.414-1.414l-.707-.707a1 1 0 00-1.414 1.414zm2.12-10.607a1 1 0 010 1.414l-.706.707a1 1 0 11-1.414-1.414l.707-.707a1 1 0 011.414 0zM17 11a1 1 0 100-2h-1a1 1 0 100 2h1zm-7 4a1 1 0 011 1v1a1 1 0 11-2 0v-1a1 1 0 011-1zM5.05 6.464A1 1 0 106.465 5.05l-.708-.707a1 1 0 00-1.414 1.414l.707.707zm1.414 8.486l-.707.707a1 1 0 01-1.414-1.414l.707-.707a1 1 0 011.414 1.414zM4 11a1 1 0 100-2H3a1 1 0 000 2h1z">
				</path>
			</svg>
			<svg id="moon-icon" class="w-6 h-6 block dark:hidden" fill="currentColor" viewBox="0 0 20 20"
				xmlns="http://www.w3.org/2000/svg">
				<path d="M17.293 13.293A8 8 0 016.707 2.707a8.001 8.001 0 1010.586 10.586z"></path>
			</svg>
		</button>
	</div>
	<!-- Main Content -->
	<main class="min-h-screen">
		<div class="content-container">
			<!-- Breadcrumbs -->
			<nav class="text-sm mb-6">
				<ol class="list-none p-0 flex">
					<li class="flex items-center">
						<a href="/admin"
							class="text-gray-500 dark:text-gray-400 hover:text-primary dark:hover:text-primary">Admin</a>
						<svg class="h-4 w-4 mx-2 text-gray-400" fill="none" viewBox="0 0 24 24" stroke="currentColor">
							<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7">
							</path>
						</svg>
					</li>
					<li>
						<span class="text-gray-700 dark:text-gray-300">Novi Artikl</span>
					</li>
				</ol>
			</nav>
			<!-- Page Title -->
			<h1 class="text-3xl font-semibold text-black dark:text-white mb-10">Novi Artikl</h1>
			<!-- Form -->
			<form class="bg-white dark:bg-gray-800 shadow-md rounded-lg p-6">
				<!-- Title Field -->
				<div class="mb-6">
					<label for="title"
						class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">Naslov</label>
					<div class="relative">
						<input type="text" id="title" name="title"
							class="w-full px-4 py-3 rounded-lg border border-gray-300 dark:border-gray-600 focus:ring-2 focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-700 dark:text-white transition-colors duration-200"
							placeholder="Unesite naslov artikla" />
						<div
							class="absolute inset-y-0 right-0 flex items-center pr-3 pointer-events-none text-gray-400">
							<svg class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
								<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
									d="M15.232 5.232l3.536 3.536m-2.036-5.036a2.5 2.5 0 113.536 3.536L6.5 21.036H3v-3.572L16.732 3.732z">
								</path>
							</svg>
						</div>
					</div>
					<p class="mt-1 text-xs text-gray-500 dark:text-gray-400">
						Jasan i koncizan naslov koji privlači
						pažnju
					</p>
				</div>
				<!-- Category Field with enhanced dropdown -->
				<div class="mb-6">
					<label for="category"
						class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">Kategorija</label>
					<div class="relative">
						<select id="category" name="category_id"
							class="w-full px-4 py-3 rounded-lg border border-gray-300 dark:border-gray-600 focus:ring-2 focus:ring-blue-500 focus:border-blue-500 appearance-none dark:bg-gray-700 dark:text-white transition-colors duration-200">
							<option value="">Izaberite kategoriju</option>
							for _, v := range categories {
							<option value={ v.CategoryID.String() }>{ v.CategoryName }</option>
							}
						</select>
						<div
							class="absolute inset-y-0 right-0 flex items-center px-3 pointer-events-none text-gray-500 dark:text-gray-400">
							<svg class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
								<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
									d="M19 9l-7 7-7-7"></path>
							</svg>
						</div>
					</div>
				</div>
				<div class="mb-6 mt-6">
					<label for="editor"
						class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">Sadržaj</label>
					<div class="border border-gray-300 dark:border-gray-600 rounded-lg overflow-hidden">
						<!-- TinyMCE will replace this textarea -->
						<textarea id="editor" name="content_description" class="w-full min-h-[400px]"></textarea>
					</div>
					<p class="mt-1 text-xs text-gray-500 dark:text-gray-400">
						Koristite alate za formatiranje za bolju
						čitljivost
					</p>
				</div>
				<div class="flex gap-4 pt-4">
					<button hx-post="/api/admin/content/publish" hx-target="#create-article-modal" hx-swap="innerHTML"
						onClick={ clearArticleModal() } type="submit"
						class="cursor-pointer bg-emerald-700 hover:bg-emerald-800 text-white px-4 py-2 rounded-lg">
						Objavi
					</button>
					<button hx-post="/api/admin/content/draft" hx-target="#create-article-modal" hx-swap="innerHTML"
						type="submit" onClick={ clearArticleModal() }
						class="cursor-pointer py-2 px-4 rounded-lg bg-yellow-800 hover:bg-yellow-900 text-white">
						Sačuvaj
					</button>
				</div>
			</form>
			<!-- Media section -->
			<div class="form-group mt-6">
				<label class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">Medije</label>
				<div id="admin-media" hx-get="/api/admin/media" hx-trigger="load" hx-target="#admin-media"
					class="mt-1 flex justify-center px-6 pt-5 pb-6 border-2 border-gray-300 dark:border-gray-700 border-dashed rounded-md">
				</div>
			</div>
			<!-- Tags section -->
			<div id="admin-tags" class="mt-6">
				@AdminTags(tags, contentTags)
			</div>
		</div>
		<div id="create-article-modal" class="fixed top-1/6 left-1/2 transform -translate-x-1/2 -translate-y-1/6"></div>
		<div class="flex gap-4 pt-4">
			<a href="/admin" class="cursor-pointer bg-gray-600 hover:bg-gray-400 text-white px-4 py-2 rounded-lg">
				Gotovo
			</a>
		</div>
	</main>
	<!-- TinyMCE Initialization -->
</body>

</html>
}

templ ArticleSuccess(message string) {
<div
	class="bg-green-100 border-l-4 border-green-500 rounded-md shadow-md transform transition-all duration-300 ease-out animate-fadeIn">
	<div class="flex flex-col gap-2 sm:gap-0 sm:flex-row justify-center items-center p-3">
		<div>
			<svg class="h-5 w-5 text-green-500" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20"
				fill="currentColor">
				<path fill-rule="evenodd"
					d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z"
					clip-rule="evenodd"></path>
			</svg>
		</div>
		<div class="ml-3 mr-7">
			<p class="text-sm text-center font-medium text-green-800">{ message }</p>
		</div>
		<div class="sm:ml-auto sm:pl-3">
			<div class="flex space-x-2">
				<a href="/admin"
					class="inline-flex text-xs bg-green-50 hover:bg-green-100 text-green-700 font-medium py-1 px-2 rounded-md transition-colors duration-150">
					Nazad
				</a>
				<button onclick="document.getElementById('create-article-modal').classList.add('hidden')"
					class="cursor-pointer inline-flex text-xs bg-green-50 hover:bg-green-100 text-green-700 font-medium py-1 px-2 rounded-md transition-colors duration-150">
					Zatvori
				</button>
			</div>
		</div>
	</div>
</div>
}

templ ArticleError(message string) {
<div
	class="bg-red-100 border-l-4 border-red-500 rounded-md shadow-md transform transition-all duration-300 ease-out animate-fadeIn">
	<div class="flex flex-col gap-2 sm:gap-0 sm:flex-row justify-center items-center p-3">
		<div>
			<svg class="h-5 w-5 text-red-500" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20"
				fill="currentColor">
				<path fill-rule="evenodd"
					d="M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z"
					clip-rule="evenodd"></path>
			</svg>
		</div>
		<div class="ml-3 mr-7">
			<p class="text-sm text-center font-medium text-red-800">{ message }</p>
		</div>
		<div class="sm:ml-auto sm:pl-3">
			<div class="flex space-x-2">
				<a href="/admin"
					class="inline-flex text-xs bg-red-50 hover:bg-red-100 text-red-700 font-medium py-1 px-2 rounded-md transition-colors duration-150">
					Nazad
				</a>
				<button onclick="document.getElementById('create-article-modal').classList.add('hidden')"
					class="cursor-pointer inline-flex text-xs bg-red-50 hover:bg-red-100 text-red-700 font-medium py-1 px-2 rounded-md transition-colors duration-150">
					Zatvori
				</button>
			</div>
		</div>
	</div>
</div>
}

templ AdminTags(tags []db.Tag, contentTags []db.Tag) {
<div class="mb-6">
	<label class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">Tagovi</label>
	<div class="flex flex-col gap-2">
		<div
			class="flex flex-wrap gap-2 p-3 border border-gray-300 dark:border-gray-600 rounded-lg bg-gray-50 dark:bg-gray-700 min-h-[30px]">
			<!-- Example tags - you can make these dynamic -->
			if len(contentTags) > 0 {
			for _, v := range contentTags {
			<span
				class="inline-flex items-center px-3 py-1 rounded-full text-sm font-medium bg-blue-100 text-blue-800 dark:bg-blue-700 dark:text-blue-100">
				<span>{ v.TagName }</span>
				<button type="button" hx-delete={ fmt.Sprintf("/api/admin/tags/content/remove/%v", v.TagID) }
					hx-trigger="click"
					class="cursor-pointer ml-1 inline-flex text-blue-600 dark:text-blue-300 focus:outline-none">
					<svg class="h-4 w-4" fill="none" viewBox="0 0 24 24" stroke="currentColor">
						<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12">
						</path>
					</svg>
				</button>
			</span>
			}
			}
		</div>
		<div class="flex flex-col gap-2 sm:flex-row sm:gap-8">
			<form hx-post="/api/admin/tags/add" class="flex">
				<div class="relative">
					<select id="tag" name="tag_id"
						class="w-full sm:mr-6 px-4 py-3 rounded-lg border border-gray-300 dark:border-gray-600 focus:ring-2 focus:ring-blue-500 focus:border-blue-500 appearance-none dark:bg-gray-700 dark:text-white transition-colors duration-200">
						<option value="">Dodajte postojeće tagove</option>
						for _, v := range tags {
						<option value={ v.TagID.String() }>
							{ v.TagName }
						</option>
						}
					</select>
					<div
						class="absolute inset-y-0 right-0 flex items-center px-3 pointer-events-none text-gray-500 dark:text-gray-400">
						<svg class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
							<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7">
							</path>
						</svg>
					</div>
				</div>
				<button type="submit" onClick={ clearArticleModal() } class=" cursor-pointer px-3 py-2 rounded-lg flex items-center gap-2 text-gray-600 hover:text-gray-900
					dark:text-gray-300 dark:hover:text-white hover:bg-gray-100 dark:hover:bg-gray-700 transition-colors"
					aria-label="Add tag">
					<svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none"
						stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"
						class="feather feather-plus">
						<line x1="12" y1="5" x2="12" y2="19"></line>
						<line x1="5" y1="12" x2="19" y2="12"></line>
					</svg>
				</button>
			</form>
			<!-- Input for new tag -->
			<form
				class="flex justify-between items-center overflow-hidden border rounded-md bg-white dark:bg-gray-800 shadow-sm hover:shadow focus-within:ring-2 focus-within:ring-blue-500 max-w-md">
				<input type="text" name="tag_name"
					class="flex-1 px-3 py-2 bg-transparent focus:outline-none dark:text-white"
					placeholder="Dodajte nove tagove..." />
				<button hx-post="/api/admin/tags" onClick={ clearArticleModal() }
					class="cursor-pointer px-3 py-2 rounded-lg flex items-center gap-2 text-gray-600 hover:text-gray-900 dark:text-gray-300 dark:hover:text-white hover:bg-gray-100 dark:hover:bg-gray-700 transition-colors"
					aria-label="Add tag">
					<svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none"
						stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"
						class="feather feather-plus">
						<line x1="12" y1="5" x2="12" y2="19"></line>
						<line x1="5" y1="12" x2="19" y2="12"></line>
					</svg>
				</button>
			</form>
		</div>
	</div>
	<p class="mt-1 text-xs text-gray-500 dark:text-gray-400">
		Dodajte relevantne tagove za bolju
		vidljivost
	</p>
</div>
}

templ InsertMedia(medias []db.Medium, contentID string) {
if len(medias) == 0 {
// Empty state - show upload UI
<div class="space-y-1 text-center">
	<svg class="mx-auto h-12 w-12 text-gray-400" stroke="currentColor" fill="none" viewBox="0 0 48 48">
		<path
			d="M28 8H12a4 4 0 00-4 4v20m32-12v8m0 0v8a4 4 0 01-4 4H12a4 4 0 01-4-4v-4m32-4l-3.172-3.172a4 4 0 00-5.656 0L28 28M8 32l9.172-9.172a4 4 0 015.656 0L28 28m0 0l4 4m4-24h8m-4-4v8m-12 4h.02"
			stroke-width="2" stroke-linecap="round" stroke-linejoin="round"></path>
	</svg>
	<div class="flex justify-center text-sm text-gray-600 dark:text-gray-400">
		<form id="upload-form" hx-post="/api/admin/media/upload/new" hx-encoding="multipart/form-data"
			hx-target="#admin-media" hx-swap="innerHTML">
			<label for="file-upload"
				class="relative cursor-pointer rounded-md font-medium text-primary hover:text-blue-700">
				<span class="text-blue-500">Dodaj fajl</span>
				<input id="file-upload" name="file_upload" type="file" class="sr-only" hx-trigger="change"
					hx-on:change="document.getElementById('upload-form').requestSubmit()" />
			</label>
			<input type="hidden" name="content_id" value={ contentID } />
		</form>
	</div>
</div>
} else {
// Media exists - show gallery
<div id="media-container" class="space-y-4">
	<!-- Grid of media items with larger minimum sizes -->
	<div class="grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 gap-6">
		for _, media := range medias {
		<div class="relative group h-32 w-48">
			<!-- Media container with border and minimum size -->
			<div
				class="border border-gray-200 dark:border-gray-700 rounded-md overflow-hidden shadow-sm hover:shadow-md transition-shadow duration-200 h-full">
				<!-- Different display based on media type -->
				if media.MediaType == "image" {
				<div class="relative h-full w-full">
					<img src={ media.MediaUrl } alt="" class="absolute inset-0 w-full h-full object-cover" />
				</div>
				} else if media.MediaType == "video" {
				<div class="relative h-full w-full bg-black">
					<div class="absolute inset-0 flex items-center justify-center">
						<svg class="w-12 h-12 text-white" fill="currentColor" viewBox="0 0 20 20">
							<path d="M8 5v10l8-5-8-5z"></path>
						</svg>
					</div>
				</div>
				}
				<!-- File name/caption (optional) -->
				<div class="p-2 text-xs truncate text-gray-600 dark:text-gray-400">
					{ media.MediaCaption }
				</div>
			</div>
			<!-- Order badge -->
			<div class="absolute top-2 left-2">
				<span
					class="bg-blue-500 text-white text-xs font-medium rounded-full w-6 h-6 flex items-center justify-center shadow-md">
					{ strconv.Itoa(int(media.MediaOrder)) }
				</span>
			</div>
			<!-- Delete button -->
			<div class="absolute top-2 right-2">
				<button
					class="bg-red-500 hover:bg-red-600 text-white rounded-full w-6 h-6 flex items-center justify-center shadow-md opacity-0 group-hover:opacity-100 transition-opacity duration-200"
					hx-delete={ fmt.Sprintf("/api/admin/media/remove/%s", media.MediaID) } hx-target="#admin-media"
					hx-swap="innerHTML">
					×
				</button>
			</div>
		</div>
		}
	</div>
	<!-- Add another file button -->
	<div class="mt-4 flex justify-center">
		<form id="upload-additional-form" hx-post="/api/admin/media/upload/new" hx-encoding="multipart/form-data"
			hx-target="#admin-media" hx-swap="innerHTML">
			<label for="file-upload-additional"
				class="cursor-pointer text-blue-500 hover:text-blue-700 flex items-center gap-1">
				<svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
					<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 4v16m8-8H4"></path>
				</svg>
				<span>Dodaj još jedan fajl</span>
				<input id="file-upload-additional" name="file_upload" type="file" class="sr-only" hx-trigger="change"
					hx-on:change="document.getElementById('upload-additional-form').requestSubmit()" />
			</label>
			<input type="hidden" name="content_id" value={ contentID } />
		</form>
	</div>
</div>
}
}
