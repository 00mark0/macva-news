package components

import "github.com/00mark0/macva-news/db/services"
import "fmt"
import "github.com/00mark0/macva-news/utils"

templ Search(content []db.SearchContentRow, searchCount int64, searchTerm string, nextLimit int, globalSettings db.GlobalSetting) {
	<div id="search-results">
		@SearchResults(content, searchCount, searchTerm, nextLimit, globalSettings)
	</div>
	<div id="other-content" hx-get="/api/content/other" hx-swap="innerHTML" hx-trigger="load" class="mt-16"></div>
}

templ SearchResults(content []db.SearchContentRow, searchCount int64, searchTerm string, nextLimit int, globalSettings db.GlobalSetting) {
	<div class="container mx-auto">
		<div class="mb-6 flex flex-col sm:flex-row items-center justify-between">
			<h1 class="text-xl font-bold text-gray-800 dark:text-gray-200">Rezultati Pretrage za: "{ searchTerm }"</h1>
			<p class="text-gray-600 dark:text-gray-300">
				if searchCount == 0 {
					Nije pronađen nijedan rezultat
				} else if nextLimit > int(searchCount) {
					Prikaz { fmt.Sprint(searchCount) } od { fmt.Sprint(searchCount) } rezultata
				} else {
					Prikaz { fmt.Sprint(nextLimit) } od { fmt.Sprint(searchCount) } rezultata
				}
			</p>
		</div>
		<div class="grid gap-6 md:grid-cols-2 lg:grid-cols-3">
			for _, v := range content {
				<article class="group relative bg-white shadow-md border-b-2 border-gray-200 transition-all duration-300 hover:shadow-lg hover:-translate-y-1 overflow-hidden dark:bg-gray-800 flex flex-col h-[364px]" style="z-index: 10;">
					<div class="flex flex-col h-full">
						<!-- Image Container - Fixed height -->
						<a href={ templ.SafeURL(fmt.Sprintf("/%s/%s", utils.Slugify(v.Title), v.ContentID.String())) }>
							<div class="relative w-full h-48">
								if v.Thumbnail.Valid && v.Thumbnail.String != "" {
									<img
										src={ v.Thumbnail.String }
										alt={ v.Title }
										class="thumbnail absolute inset-0 w-full h-full object-cover transition-transform duration-500 group-hover:scale-105 brightness-90 group-hover:brightness-100"
									/>
									<div class="absolute inset-0 bg-gradient-to-t from-black/80 via-black/30 to-transparent"></div>
								} else {
									<div class="absolute inset-0 bg-gradient-to-t from-gray-900 to-gray-700"></div>
								}
							</div>
						</a>
						<!-- Content Container - Takes remaining height -->
						<div class="px-4 pt-2 relative flex-grow flex flex-col justify-between z-10 bg-white/90 dark:bg-gray-800/90 backdrop-blur-sm">
							<div class="absolute top-0 left-0 w-1 h-full bg-gray-800 group-hover:bg-blue-600 transition-colors duration-300"></div>
							<!-- Top content section -->
							<a href={ templ.SafeURL(fmt.Sprintf("/%s/%s", utils.Slugify(v.Title), v.ContentID.String())) }>
								<div>
									<div class="flex justify-between items-center text-xs text-gray-600 dark:text-gray-300 mb-2 space-x-2">
										<span class="dark:text-gray-300">{ utils.TimeAgo(v.PublishedAt.Time) }</span>
										<p class="text-sm sm:text-md">{ v.CategoryName }</p>
									</div>
									<h2 class="text-md font-semibold text-gray-900 dark:text-gray-200 mb-2 line-clamp-2 leading-tight">
										{ v.Title }
									</h2>
									<p class="text-sm text-gray-700 dark:text-gray-300 mb-2 line-clamp-2 leading-tight">
										{ utils.ParseHTMLToText(v.ContentDescription) }
									</p>
								</div>
							</a>
							<!-- Bottom section with stats - Always at bottom -->
							<div class="flex items-center justify-between mt-auto py-2 border-t border-gray-100 dark:border-gray-700">
								<div class="flex space-x-3 text-xs text-gray-600 dark:text-gray-300">
									if v.ViewCountEnabled && !globalSettings.DisableViews {
										<span class="flex items-center hover:text-green-600 transition-colors">
											<svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 mr-1" viewBox="0 0 20 20" fill="currentColor">
												<path d="M10 12a2 2 0 100-4 2 2 0 000 4z"></path>
												<path fill-rule="evenodd" d="M.458 10C1.732 5.943 5.522 3 10 3s8.268 2.943 9.542 7c-1.274 4.057-5.064 7-9.542 7S1.732 14.057.458 10zM14 10a4 4 0 11-8 0 4 4 0 018 0z" clip-rule="evenodd"></path>
											</svg>
											{ fmt.Sprint(v.ViewCount) }
										</span>
									}
									if v.LikeCountEnabled && !globalSettings.DisableLikes {
										<span class="flex items-center hover:text-red-600 transition-colors">
											<svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 mr-1" viewBox="0 0 20 20" fill="currentColor">
												<path d="M2 10.5a1.5 1.5 0 113 0v6a1.5 1.5 0 01-3 0v-6zM6 10.333v5.43a2 2 0 001.106 1.79l.05.025A4 4 0 008.943 18h5.416a2 2 0 001.962-1.608l1.2-6A2 2 0 0015.56 8H12V4a2 2 0 00-2-2 1 1 0 00-1 1v.667a4 4 0 01-.8 2.4L6.8 7.933a4 4 0 00-.8 2.4z"></path>
											</svg>
											{ fmt.Sprint(v.LikeCount) }
										</span>
									}
									if v.DislikeCountEnabled && !globalSettings.DisableDislikes {
										<span class="flex items-center hover:text-red-600 transition-colors">
											<svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 mr-1" viewBox="0 0 20 20" fill="currentColor">
												<path d="M18 9.5a1.5 1.5 0 11-3 0v-6a1.5 1.5 0 013 0v6zM14 9.667v-5.43a2 2 0 00-1.105-1.79l-.05-.025A4 4 0 0011.055 2H5.64a2 2 0 00-1.962 1.608l-1.2 6A2 2 0 004.44 12H8v4a2 2 0 002 2 1 1 0 001-1v-.667a4 4 0 01.8-2.4l1.4-1.866a4 4 0 00.8-2.4z"></path>
											</svg>
											{ fmt.Sprint(v.DislikeCount) }
										</span>
									}
									if v.CommentsEnabled && !globalSettings.DisableComments {
										<span class="flex items-center hover:text-blue-600 transition-colors">
											<svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 mr-1" viewBox="0 0 20 20" fill="currentColor">
												<path fill-rule="evenodd" d="M18 10c0 3.866-3.582 7-8 7a8.841 8.841 0 01-4.083-.98L2 17l1.338-3.123C2.493 12.767 2 11.434 2 10c0-3.866 3.582-7 8-7s8 3.134 8 7zM7 9H5v2h2V9zm8 0h-2v2h2V9zM9 9h2v2H9V9z" clip-rule="evenodd"></path>
											</svg>
											{ fmt.Sprint(v.CommentCount) }
										</span>
									}
								</div>
							</div>
						</div>
					</div>
				</article>
			}
		</div>
		if nextLimit < int(searchCount) {
			<div class="text-center mt-8">
				<button
					hx-get={ fmt.Sprintf("/api/search?search_term=%s&limit=%d", searchTerm, nextLimit) }
					hx-target="#search-results"
					hx-swap="innerHTML"
					hx-trigger="click"
					class="cursor-pointer inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 transition duration-150 ease-in-out"
				>
					Učitaj više
					<svg
						xmlns="http://www.w3.org/2000/svg"
						class="h-4 w-4 ml-2"
						fill="none"
						viewBox="0 0 24 24"
						stroke="currentColor"
					>
						<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7"></path>
					</svg>
				</button>
			</div>
		}
	</div>
}

templ OtherContent(content []ListPublishedContentRes, nextLimit int, globalSettings db.GlobalSetting) {
	<h3 class="text-xl font-bold mb-4 text-gray-800 dark:text-gray-200">Nedavno</h3>
	<div class="grid gap-6">
		for _, v := range content {
			<div class="group flex bg-white shadow-md border-b-2 border-gray-200 transition-all duration-300 hover:shadow-lg hover:-translate-y-1 dark:bg-gray-800 rounded-lg overflow-hidden">
				if v.Thumbnail != "" {
					<div class="w-1/4 relative h-full overflow-hidden">
						<a href={ templ.SafeURL(fmt.Sprintf("/%s/%s", utils.Slugify(v.Title), v.ContentID)) }>
							<img
								src={ v.Thumbnail }
								alt={ v.Title }
								class="absolute inset-0 w-full h-full object-cover transition-transform duration-500 group-hover:scale-105 brightness-90 hover:brightness-100"
							/>
						</a>
					</div>
				}
				<div class="w-2/3 p-4 flex flex-col justify-between relative">
					<div class="absolute top-0 left-0 w-1 h-full bg-gray-800 group-hover:bg-blue-600 transition-colors duration-300"></div>
					<a href={ templ.SafeURL(fmt.Sprintf("/%s/%s", utils.Slugify(v.Title), v.ContentID)) }>
						<div>
							<div class="w-full flex items-center text-xs text-gray-600 dark:text-gray-300 mb-2 space-x-2">
								<span class="flex items-center">
									<svg xmlns="http://www.w3.org/2000/svg" class="h-3 w-3 mr-1 text-gray-400" fill="none" viewBox="0 0 24 24" stroke="currentColor">
										<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5.121 17.804A13.937 13.937 0 0112 16c2.5 0 4.847.655 6.879 1.804M15 10a3 3 0 11-6 0 3 3 0 016 0zm6 2a9 9 0 11-18 0 9 9 0 0118 0z"></path>
									</svg>
									{ v.Username }
								</span>
								<span class="text-gray-300 dark:text-gray-600">•</span>
								<span class="dark:text-gray-300 w-full">{ v.PublishedAt }</span>
							</div>
							<h2 class="text-lg font-semibold text-gray-900 dark:text-gray-200 mb-2 line-clamp-2 leading-tight">
								{ v.Title }
							</h2>
							<p class="text-sm text-gray-700 dark:text-gray-300 mb-3 line-clamp-2 leading-tight">
								{ utils.ParseHTMLToText(v.ContentDescription) }
							</p>
						</div>
					</a>
					<div class="flex items-center justify-between mt-2 pt-2 border-t border-gray-100">
						<div class="flex space-x-3 text-xs text-gray-600 dark:text-gray-300">
							if v.ViewCountEnabled && !globalSettings.DisableViews {
								<span class="flex items-center hover:text-green-600 transition-colors">
									<svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 mr-1" viewBox="0 0 20 20" fill="currentColor">
										<path d="M10 12a2 2 0 100-4 2 2 0 000 4z"></path>
										<path fill-rule="evenodd" d="M.458 10C1.732 5.943 5.522 3 10 3s8.268 2.943 9.542 7c-1.274 4.057-5.064 7-9.542 7S1.732 14.057.458 10zM14 10a4 4 0 11-8 0 4 4 0 018 0z" clip-rule="evenodd"></path>
									</svg>
									{ fmt.Sprint(v.ViewCount) }
								</span>
							}
							if v.LikeCountEnabled && !globalSettings.DisableLikes {
								<span class="flex items-center hover:text-red-600 transition-colors">
									<svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 mr-1" viewBox="0 0 20 20" fill="currentColor">
										<path d="M2 10.5a1.5 1.5 0 113 0v6a1.5 1.5 0 01-3 0v-6zM6 10.333v5.43a2 2 0 001.106 1.79l.05.025A4 4 0 008.943 18h5.416a2 2 0 001.962-1.608l1.2-6A2 2 0 0015.56 8H12V4a2 2 0 00-2-2 1 1 0 00-1 1v.667a4 4 0 01-.8 2.4L6.8 7.933a4 4 0 00-.8 2.4z"></path>
									</svg>
									{ fmt.Sprint(v.LikeCount) }
								</span>
							}
							if v.DislikeCountEnabled && !globalSettings.DisableDislikes {
								<span class="flex items-center hover:text-red-600 transition-colors">
									<svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 mr-1" viewBox="0 0 20 20" fill="currentColor">
										<path d="M18 9.5a1.5 1.5 0 11-3 0v-6a1.5 1.5 0 013 0v6zM14 9.667v-5.43a2 2 0 00-1.105-1.79l-.05-.025A4 4 0 0011.055 2H5.64a2 2 0 00-1.962 1.608l-1.2 6A2 2 0 004.44 12H8v4a2 2 0 002 2 1 1 0 001-1v-.667a4 4 0 01.8-2.4l1.4-1.866a4 4 0 00.8-2.4z"></path>
									</svg>
									{ fmt.Sprint(v.DislikeCount) }
								</span>
							}
							if v.CommentsEnabled && !globalSettings.DisableComments {
								<span class="flex items-center hover:text-blue-600 transition-colors">
									<svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 mr-1" viewBox="0 0 20 20" fill="currentColor">
										<path fill-rule="evenodd" d="M18 10c0 3.866-3.582 7-8 7a8.841 8.841 0 01-4.083-.98L2 17l1.338-3.123C2.493 12.767 2 11.434 2 10c0-3.866 3.582-7 8-7s8 3.134 8 7zM7 9H5v2h2V9zm8 0h-2v2h2V9zM9 9h2v2H9V9z" clip-rule="evenodd"></path>
									</svg>
									{ fmt.Sprint(v.CommentCount) }
								</span>
							}
						</div>
					</div>
				</div>
			</div>
		}
	</div>
	if len(content) == nextLimit {
		<div class="text-center mt-8">
			<button
				hx-get={ fmt.Sprintf("/api/content/other?limit=%d", nextLimit) }
				hx-target="#other-content"
				hx-swap="innerHTML"
				hx-trigger="click"
				class="cursor-pointer inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 transition duration-150 ease-in-out"
			>
				Učitaj više
				<svg
					xmlns="http://www.w3.org/2000/svg"
					class="h-4 w-4 ml-2"
					fill="none"
					viewBox="0 0 24 24"
					stroke="currentColor"
				>
					<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7"></path>
				</svg>
			</button>
		</div>
	}
}

templ SearchPage(props ...interface{}) {
	@Layout(props[0].(db.GetUserByIDRow), props[1].(Meta), props[2].([]db.Ad), props[3].([]db.Category), Search(props[4].([]db.SearchContentRow), props[5].(int64), props[6].(string), props[7].(int), props[8].(db.GlobalSetting)))
}
